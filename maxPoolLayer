import random
import numpy as np
import activationFunctions
from layer import layer

class maxPoolLayer(layer):
    def __init__(self, size, inputSize, activation=activationFunctions.tanh, activationD=activationFunctions.tanhD) -> None:
        self.size = size
        self.inputSize = inputSize
        
    def reinit(self) -> None:
        pass
    
    #takes input as matrix, for use inside the network
    def forward(self, input): #recheck later
        M, N = input.shape
        K = 2
        L = 2

        MK = M // K
        NL = N // L
        output = input[:MK*K, :NL*L].reshape(MK, K, NL, L).max(axis=(1, 3))
        return output
    
    def backPropagation(self, input, output, error):
        pass
    
    def findError(self, prevError):
        prevError = np.kron(prevError, np.ones((2,2)))
        return prevError
    